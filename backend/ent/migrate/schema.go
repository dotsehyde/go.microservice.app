// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CountriesColumns holds the columns for the "countries" table.
	CountriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
	}
	// CountriesTable holds the schema information for the "countries" table.
	CountriesTable = &schema.Table{
		Name:       "countries",
		Columns:    CountriesColumns,
		PrimaryKey: []*schema.Column{CountriesColumns[0]},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// NationalitiesColumns holds the columns for the "nationalities" table.
	NationalitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString},
	}
	// NationalitiesTable holds the schema information for the "nationalities" table.
	NationalitiesTable = &schema.Table{
		Name:       "nationalities",
		Columns:    NationalitiesColumns,
		PrimaryKey: []*schema.Column{NationalitiesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"farmer", "worker", "supplier", "officer"}, Default: "farmer"},
		{Name: "id_type", Type: field.TypeString, Nullable: true},
		{Name: "id_number", Type: field.TypeString, Nullable: true},
		{Name: "id_photo", Type: field.TypeString, Nullable: true},
		{Name: "profile_photo", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "nationality", Type: field.TypeString, Nullable: true},
		{Name: "language", Type: field.TypeEnum, Enums: []string{"en", "fr"}, Default: "en"},
		{Name: "is_worker", Type: field.TypeBool, Default: false},
		{Name: "is_verified", Type: field.TypeBool, Default: false},
		{Name: "is_blocked", Type: field.TypeBool, Default: false},
		{Name: "reason", Type: field.TypeString, Nullable: true},
		{Name: "country_id", Type: field.TypeInt, Default: 1},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_countries_user",
				Columns:    []*schema.Column{UsersColumns[19]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CountriesTable,
		LanguagesTable,
		NationalitiesTable,
		UsersTable,
	}
)

func init() {
	UsersTable.ForeignKeys[0].RefTable = CountriesTable
}
