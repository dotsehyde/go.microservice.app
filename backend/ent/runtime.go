// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/BenMeredithConsult/locagri-apps/ent/country"
	"github.com/BenMeredithConsult/locagri-apps/ent/language"
	"github.com/BenMeredithConsult/locagri-apps/ent/nationality"
	"github.com/BenMeredithConsult/locagri-apps/ent/schema"
	"github.com/BenMeredithConsult/locagri-apps/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	countryMixin := schema.Country{}.Mixin()
	countryMixinFields0 := countryMixin[0].Fields()
	_ = countryMixinFields0
	countryFields := schema.Country{}.Fields()
	_ = countryFields
	// countryDescCreatedAt is the schema descriptor for created_at field.
	countryDescCreatedAt := countryMixinFields0[0].Descriptor()
	// country.DefaultCreatedAt holds the default value on creation for the created_at field.
	country.DefaultCreatedAt = countryDescCreatedAt.Default.(func() time.Time)
	// countryDescUpdatedAt is the schema descriptor for updated_at field.
	countryDescUpdatedAt := countryMixinFields0[1].Descriptor()
	// country.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	country.DefaultUpdatedAt = countryDescUpdatedAt.Default.(func() time.Time)
	// country.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	country.UpdateDefaultUpdatedAt = countryDescUpdatedAt.UpdateDefault.(func() time.Time)
	languageMixin := schema.Language{}.Mixin()
	languageMixinFields0 := languageMixin[0].Fields()
	_ = languageMixinFields0
	languageFields := schema.Language{}.Fields()
	_ = languageFields
	// languageDescCreatedAt is the schema descriptor for created_at field.
	languageDescCreatedAt := languageMixinFields0[0].Descriptor()
	// language.DefaultCreatedAt holds the default value on creation for the created_at field.
	language.DefaultCreatedAt = languageDescCreatedAt.Default.(func() time.Time)
	// languageDescUpdatedAt is the schema descriptor for updated_at field.
	languageDescUpdatedAt := languageMixinFields0[1].Descriptor()
	// language.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	language.DefaultUpdatedAt = languageDescUpdatedAt.Default.(func() time.Time)
	// language.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	language.UpdateDefaultUpdatedAt = languageDescUpdatedAt.UpdateDefault.(func() time.Time)
	nationalityMixin := schema.Nationality{}.Mixin()
	nationalityMixinFields0 := nationalityMixin[0].Fields()
	_ = nationalityMixinFields0
	nationalityFields := schema.Nationality{}.Fields()
	_ = nationalityFields
	// nationalityDescCreatedAt is the schema descriptor for created_at field.
	nationalityDescCreatedAt := nationalityMixinFields0[0].Descriptor()
	// nationality.DefaultCreatedAt holds the default value on creation for the created_at field.
	nationality.DefaultCreatedAt = nationalityDescCreatedAt.Default.(func() time.Time)
	// nationalityDescUpdatedAt is the schema descriptor for updated_at field.
	nationalityDescUpdatedAt := nationalityMixinFields0[1].Descriptor()
	// nationality.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	nationality.DefaultUpdatedAt = nationalityDescUpdatedAt.Default.(func() time.Time)
	// nationality.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	nationality.UpdateDefaultUpdatedAt = nationalityDescUpdatedAt.UpdateDefault.(func() time.Time)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[0].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[1].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescPhone is the schema descriptor for phone field.
	userDescPhone := userFields[2].Descriptor()
	// user.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	user.PhoneValidator = userDescPhone.Validators[0].(func(string) error)
	// userDescCountryID is the schema descriptor for country_id field.
	userDescCountryID := userFields[12].Descriptor()
	// user.DefaultCountryID holds the default value on creation for the country_id field.
	user.DefaultCountryID = userDescCountryID.Default.(int)
	// userDescIsWorker is the schema descriptor for is_worker field.
	userDescIsWorker := userFields[13].Descriptor()
	// user.DefaultIsWorker holds the default value on creation for the is_worker field.
	user.DefaultIsWorker = userDescIsWorker.Default.(bool)
	// userDescIsVerified is the schema descriptor for is_verified field.
	userDescIsVerified := userFields[14].Descriptor()
	// user.DefaultIsVerified holds the default value on creation for the is_verified field.
	user.DefaultIsVerified = userDescIsVerified.Default.(bool)
	// userDescIsBlocked is the schema descriptor for is_blocked field.
	userDescIsBlocked := userFields[15].Descriptor()
	// user.DefaultIsBlocked holds the default value on creation for the is_blocked field.
	user.DefaultIsBlocked = userDescIsBlocked.Default.(bool)
}
